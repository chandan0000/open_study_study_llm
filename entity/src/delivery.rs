//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "delivery")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub order_id: Option<i32>,
    pub delivery_address: String,
    pub city: String,
    pub postal_code: String,
    pub country: String,
    pub delivery_status: Option<String>,
    pub tracking_number: Option<String>,
    pub delivery_provider: Option<String>,
    pub estimated_delivery_date: Option<DateTimeWithTimeZone>,
    pub actual_delivery_date: Option<DateTimeWithTimeZone>,
    pub created_at: Option<DateTimeWithTimeZone>,
    pub updated_at: Option<DateTimeWithTimeZone>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::orders::Entity",
        from = "Column::OrderId",
        to = "super::orders::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Orders,
}

impl Related<super::orders::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Orders.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
